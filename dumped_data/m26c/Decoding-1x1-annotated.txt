'Bin 1x1 decoding for M26C
SUB Arrayswap2 (BYVAL Imptr1&, BYVAL Imptr2&, BYVAL Imptr3&, BYVAL Imptr4&, BYVAL Linelength&, BYVAL Linecount&) EXPORT
// 6 parameters - 4 pointers and 2 integers

Imptr1 - rotated output buffer?
Imptr2 - input buffer 1
Imptr3 - input buffer 2
imptr4 - unrotated output buffer
linelength - 1/2 chip width - 1 frame = 2616
linecount  - chip height = 3900

    DIM Impt1 AS WORD PTR
    DIM Impt2 AS WORD PTR
    DIM Impt3 AS WORD PTR
    DIM Impt4 AS WORD PTR
    DIM Impt5 AS WORD PTR
    DIM Impt6 AS WORD PTR
    DIM Impt7 AS WORD PTR
    DIM Impt8 AS WORD PTR

// Note:  we are reading down a column (I think)

'Linelength&=2616
Linebytes&=Linelength& * 2      # convert lines to bytes

Lbx3&=Linebytes&*3              # bytes * 3
Lbx5&=Linebytes&*5              # bytes * 5

'Chipheight&=3900
Linecount_4&=Linecount&/4

// note these are linelength, not linecount
Linelengthx2&=Linelength&*2         // == LineBytes
Linelengthx4&=Linelength&*4         // == 2 * LineBytes
Linelengthx8&=Linelength&*8         // == 4 * LineBytes

// output buffer + 2 columns - skip leftmost two columns
Imptr4& = Imptr4&  + 10464

'OUTPUT ARRAY START

// output buffer + 3 columns
Impt1=Imptr4& + Linebytes&

//  output buffer + 2 columns + whole image - 4 columns + 4 bytes -> 2 columns from the right + 4 bytes
Impt2=Imptr4& + (Linecount& * Linebytes&) - Linelengthx8& + 4

// output buffer  + 2 columns in + 1 columm + 2 columns - 4 -> output buffer + 5 columns - 4 bytes
Impt3=Imptr4& + Linebytes& + Linelengthx4& - 4

//  2 columns + whole image  - 2 columns + 4 -> end of image + 4 bytes
Impt4=Imptr4& + (Linecount& * Linebytes&) - Linelengthx4& + 4

    Impt5=Imptr2&                                 				'INPUT BUFFER START
    Impt6=Imptr2&+2
    Impt7=Imptr2&+4
    Impt8=Imptr2&+6

FOR y&=1 TO Linecount_4&                    				'IMAGE HEIGHT / 4
    FOR z&=1 TO Linelength& STEP 2
        @Impt1=@Impt7                           				'Green pixels
        @Impt2=@Impt8                           				'Blue pixels
        @Impt3=@Impt5                           				'Green pixels
        @Impt4=@Impt6                           				'Blue pixels

        Impt1=Impt1+4                           				'shift along by 2 pixels
        Impt2=Impt2+4
        Impt3=Impt3+4
        Impt4=Impt4+4

        Impt5=Impt5+8                           				'shift along by 4 pixels
        Impt6=Impt6+8
        Impt7=Impt7+8
        Impt8=Impt8+8
    NEXT Z&
    Impt1=Impt1+Lbx3&                      				'move output up by 4 rows
    Impt2=Impt2-Lbx5&
    Impt3=Impt3+Lbx3&
    Impt4=Impt4-Lbx5&
    Impt5=Impt5
    Impt6=Impt6
    Impt7=Impt7
    Impt8=Impt8
NEXT y&

field2:
    Imptr4&=Imptr4& + Linelengthx2&

    Impt1=Imptr4& + Linebytes& + 2 -10464                            		'Green pixels - OK       'OUTPUT ARRAY START
    Impt2=Imptr4& + (Linecount& * Linebytes&) - Linelengthx8& + 2    	'Red pixels - OK
    Impt3=Imptr4& + Linebytes& + Linelengthx4& - 2 - 10464           	'Green pixels - OK
    Impt4=Imptr4& + (Linecount& * Linebytes&) - Linelengthx4& + 2    	'Red pixels - OK

    Impt5=Imptr3&                                 				'INPUT BUFFER START
    Impt6=Imptr3&+2
    Impt7=Imptr3&+4
    Impt8=Imptr3&+6

    FOR y&=1 TO Linecount_4&                     				'IMAGE HEIGHT / 4
        FOR z&=1 TO Linelength& STEP 2
            @Impt1=@Impt7
            @Impt2=@Impt8
            @Impt3=@Impt5
            @Impt4=@Impt6

            Impt1=Impt1+4                           				'shift along by 2 pixels
            Impt2=Impt2+4
            Impt3=Impt3+4
            Impt4=Impt4+4
            Impt5=Impt5+8                           				'shift along by 4 pixels
            Impt6=Impt6+8
            Impt7=Impt7+8
            Impt8=Impt8+8
        NEXT Z&
        Impt1=Impt1+Lbx3&                      				'move output up by 4 rows
        Impt2=Impt2-Lbx5&
        Impt3=Impt3+Lbx3&
        Impt4=Impt4-Lbx5&
        Impt5=Impt5
        Impt6=Impt6
        Impt7=Impt7
        Impt8=Impt8
    NEXT y&

'Rotate image into normal orientation
derotate:
    Impt1=Imptr1&+7802
    Impt2=Imptr4&+5230      					'start at end of line and work backwards

    FOR z&=1 TO 2616
        FOR y&=1 TO 3900
            @Impt1=@Impt2
            Impt1=Impt1+2
            Impt2=Impt2+5232    					'move down 1 line
        NEXT y&
        Impt2=Impt2-20404800-2
    NEXT z&

END SUB



